/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/orders/route";
exports.ids = ["app/api/orders/route"];
exports.modules = {

/***/ "(rsc)/./app/api/orders/route.ts":
/*!*********************************!*\
  !*** ./app/api/orders/route.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\n/* harmony import */ var _barrel_optimize_names_addDays_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=addDays!=!date-fns */ \"(rsc)/./node_modules/date-fns/esm/addDays/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_database__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_database__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nasync function GET() {\n    try {\n        const pool = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n        const result = await pool.query(`\n      SELECT o.*, \n             STRING_AGG(p.name, ',') as product_names,\n             STRING_AGG(p.id::text, ',') as product_ids\n      FROM orders o\n      LEFT JOIN order_products op ON o.id = op.order_id\n      LEFT JOIN products p ON op.product_id = p.id\n      GROUP BY o.id, o.order_id, o.claim_status, o.claim_timestamp, o.claim_count, o.expiration_date, o.one_time_use, o.created_by, o.created_at\n      ORDER BY o.created_at DESC\n    `);\n        const orders = result.rows;\n        // Parse product names and IDs\n        const ordersWithProducts = orders.map((order)=>{\n            const productNames = order.product_names ? order.product_names.split(',') : [];\n            const productIds = order.product_ids ? order.product_ids.split(',').map(Number) : [];\n            // Create products array with proper structure for frontend\n            const products = productNames.map((name, index)=>({\n                    id: productIds[index],\n                    name: name.trim()\n                }));\n            return {\n                ...order,\n                product_names: productNames,\n                product_ids: productIds,\n                products: products\n            };\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(ordersWithProducts);\n    } catch (error) {\n        console.error('Get orders error:', error);\n        // Return empty array if table doesn't exist yet\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json([]);\n    }\n}\nasync function POST(request) {\n    try {\n        const { order_id, product_ids, expiration_days, one_time_use, created_by } = await request.json();\n        if (!order_id || !product_ids || product_ids.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Order ID and at least one product are required'\n            }, {\n                status: 400\n            });\n        }\n        const pool = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n        // Check if order already exists\n        const existingOrderResult = await pool.query('SELECT id FROM orders WHERE order_id = $1', [\n            order_id\n        ]);\n        if (existingOrderResult.rows.length > 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Order ID already exists'\n            }, {\n                status: 400\n            });\n        }\n        // Verify all products exist\n        for (const productId of product_ids){\n            const productResult = await pool.query('SELECT id FROM products WHERE id = $1', [\n                productId\n            ]);\n            if (productResult.rows.length === 0) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: `Product with ID ${productId} not found`\n                }, {\n                    status: 404\n                });\n            }\n        }\n        // Calculate expiration date\n        const expirationDate = expiration_days ? (0,_barrel_optimize_names_addDays_date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(new Date(), expiration_days).toISOString() : null;\n        // Create order\n        const orderResult = await pool.query(`\n      INSERT INTO orders (order_id, expiration_date, one_time_use, created_by)\n      VALUES ($1, $2, $3, $4)\n      RETURNING id\n    `, [\n            order_id,\n            expirationDate,\n            one_time_use ?? true,\n            created_by\n        ]);\n        const newOrderId = orderResult.rows[0].id;\n        // Add products to order\n        for (const productId of product_ids){\n            await pool.query(`\n        INSERT INTO order_products (order_id, product_id)\n        VALUES ($1, $2)\n      `, [\n                newOrderId,\n                productId\n            ]);\n        }\n        // Get the created order with product details\n        const newOrderResult = await pool.query(`\n      SELECT o.*, \n             STRING_AGG(p.name, ',') as product_names,\n             STRING_AGG(p.id::text, ',') as product_ids\n      FROM orders o\n      LEFT JOIN order_products op ON o.id = op.order_id\n      LEFT JOIN products p ON op.product_id = p.id\n      WHERE o.id = $1\n      GROUP BY o.id, o.order_id, o.claim_status, o.claim_timestamp, o.claim_count, o.expiration_date, o.one_time_use, o.created_by, o.created_at\n    `, [\n            newOrderId\n        ]);\n        const newOrder = newOrderResult.rows[0];\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...newOrder,\n            product_names: newOrder.product_names ? newOrder.product_names.split(',') : [],\n            product_ids: newOrder.product_ids ? newOrder.product_ids.split(',').map(Number) : []\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error('Create order error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const { id, order_id, product_ids, expiration_days, one_time_use } = await request.json();\n        if (!id || !order_id || !product_ids || product_ids.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'ID, order ID and at least one product are required'\n            }, {\n                status: 400\n            });\n        }\n        const pool = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n        // Check if order exists\n        const existingOrderResult = await pool.query('SELECT id, one_time_use, claim_count FROM orders WHERE id = $1', [\n            id\n        ]);\n        if (existingOrderResult.rows.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Order not found'\n            }, {\n                status: 404\n            });\n        }\n        const existingOrder = existingOrderResult.rows[0];\n        // Verify all products exist\n        for (const productId of product_ids){\n            const productResult = await pool.query('SELECT id FROM products WHERE id = $1', [\n                productId\n            ]);\n            if (productResult.rows.length === 0) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: `Product with ID ${productId} not found`\n                }, {\n                    status: 404\n                });\n            }\n        }\n        // Calculate expiration date\n        const expirationDate = expiration_days ? (0,_barrel_optimize_names_addDays_date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(new Date(), expiration_days).toISOString() : null;\n        // If changing from multi-use to one-time use, reset claim count to allow one more claim\n        let newClaimCount = existingOrder.claim_count;\n        if (!existingOrder.one_time_use && one_time_use) {\n            newClaimCount = 0;\n        }\n        // Update order\n        await pool.query(`\n      UPDATE orders \n      SET order_id = $1, expiration_date = $2, one_time_use = $3, claim_count = $4\n      WHERE id = $5\n    `, [\n            order_id,\n            expirationDate,\n            one_time_use ?? true,\n            newClaimCount,\n            id\n        ]);\n        // Remove existing product associations\n        await pool.query('DELETE FROM order_products WHERE order_id = $1', [\n            id\n        ]);\n        // Add new product associations\n        for (const productId of product_ids){\n            await pool.query(`\n        INSERT INTO order_products (order_id, product_id)\n        VALUES ($1, $2)\n      `, [\n                id,\n                productId\n            ]);\n        }\n        // Get updated order with product details\n        const updatedOrderResult = await pool.query(`\n      SELECT o.*, \n             STRING_AGG(p.name, ',') as product_names,\n             STRING_AGG(p.id::text, ',') as product_ids\n      FROM orders o\n      LEFT JOIN order_products op ON o.id = op.order_id\n      LEFT JOIN products p ON op.product_id = p.id\n      WHERE o.id = $1\n      GROUP BY o.id, o.order_id, o.claim_status, o.claim_timestamp, o.claim_count, o.expiration_date, o.one_time_use, o.created_by, o.created_at\n    `, [\n            id\n        ]);\n        const updatedOrder = updatedOrderResult.rows[0];\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...updatedOrder,\n            product_names: updatedOrder.product_names ? updatedOrder.product_names.split(',') : [],\n            product_ids: updatedOrder.product_ids ? updatedOrder.product_ids.split(',').map(Number) : []\n        });\n    } catch (error) {\n        console.error('Update order error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get('id');\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Order ID is required'\n            }, {\n                status: 400\n            });\n        }\n        const pool = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.getDatabase)();\n        // Delete order (this will cascade delete order_products due to foreign key)\n        await pool.query('DELETE FROM orders WHERE id = $1', [\n            id\n        ]);\n        // Also explicitly delete order_products (in case cascade doesn't work)\n        await pool.query('DELETE FROM order_products WHERE order_id = $1', [\n            id\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Order deleted successfully'\n        });\n    } catch (error) {\n        console.error('Delete order error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/orders/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/config.ts":
/*!***********************!*\
  !*** ./lib/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Configuration utility for environment variables\n * Provides type-safe access to environment configuration\n */ class ConfigManager {\n    constructor(){\n        this.config = this.loadConfig();\n        this.validateConfig();\n    }\n    loadConfig() {\n        return {\n            jwtSecret: process.env.JWT_SECRET || this.getDefaultJwtSecret(),\n            databaseUrl: this.getDatabaseUrl(),\n            postgresConfig: this.getPostgresConfig(),\n            forceAdminPasswordChange: process.env.FORCE_ADMIN_PASSWORD_CHANGE === 'true',\n            defaultAdminUsername: process.env.DEFAULT_ADMIN_USERNAME || 'admin',\n            defaultAdminPassword: process.env.DEFAULT_ADMIN_PASSWORD || 'password',\n            passwordMinLength: parseInt(process.env.PASSWORD_MIN_LENGTH || '8'),\n            passwordMaxLength: parseInt(process.env.PASSWORD_MAX_LENGTH || '128'),\n            rateLimitWindowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS || '900000'),\n            rateLimitMaxRequests: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS || '100'),\n            strictRateLimitWindowMs: parseInt(process.env.STRICT_RATE_LIMIT_WINDOW_MS || '900000'),\n            strictRateLimitMaxRequests: parseInt(process.env.STRICT_RATE_LIMIT_MAX_REQUESTS || '10'),\n            nodeEnv: \"development\" || 0,\n            port: parseInt(process.env.PORT || '3000'),\n            bcryptRounds: parseInt(process.env.BCRYPT_ROUNDS || '12'),\n            sessionTimeoutHours: parseInt(process.env.SESSION_TIMEOUT_HOURS || '24')\n        };\n    }\n    getDefaultJwtSecret() {\n        if (this.isProduction()) {\n            throw new Error('JWT_SECRET environment variable is required in production. ' + 'Generate a secure secret using: openssl rand -base64 32');\n        }\n        console.warn('⚠️  Using default JWT secret for development. Set JWT_SECRET in production!');\n        return 'dev-jwt-secret-change-for-production-use';\n    }\n    validateConfig() {\n        const errors = [];\n        // Validate JWT secret strength\n        if (this.config.jwtSecret.length < 32) {\n            errors.push('JWT_SECRET must be at least 32 characters long');\n        }\n        if (this.isProduction() && this.config.jwtSecret.includes('dev-') || this.config.jwtSecret.includes('change-') || this.config.jwtSecret === 'your-secret-key') {\n            errors.push('JWT_SECRET must be changed from default value in production');\n        }\n        // Validate numeric values\n        if (this.config.rateLimitWindowMs < 60000) {\n            errors.push('RATE_LIMIT_WINDOW_MS must be at least 60000 (1 minute)');\n        }\n        if (this.config.rateLimitMaxRequests < 10) {\n            errors.push('RATE_LIMIT_MAX_REQUESTS must be at least 10');\n        }\n        if (this.config.bcryptRounds < 10 || this.config.bcryptRounds > 15) {\n            errors.push('BCRYPT_ROUNDS must be between 10 and 15');\n        }\n        if (errors.length > 0) {\n            throw new Error(`Configuration validation failed:\\n${errors.join('\\n')}`);\n        }\n    }\n    isProduction() {\n        return this.config.nodeEnv === 'production';\n    }\n    isDevelopment() {\n        return this.config.nodeEnv === 'development';\n    }\n    get() {\n        return {\n            ...this.config\n        };\n    }\n    getJwtSecret() {\n        return this.config.jwtSecret;\n    }\n    getDatabaseUrl() {\n        return process.env.DATABASE_URL || '';\n    }\n    getPostgresConfig() {\n        return {\n            host: process.env.POSTGRES_HOST || 'localhost',\n            port: parseInt(process.env.POSTGRES_PORT || '5432'),\n            database: process.env.POSTGRES_DB || 'selfclaimlink',\n            user: process.env.POSTGRES_USER || 'postgres',\n            password: process.env.POSTGRES_PASSWORD || ''\n        };\n    }\n    shouldForceAdminPasswordChange() {\n        return this.config.forceAdminPasswordChange;\n    }\n    getRateLimitConfig() {\n        return {\n            windowMs: this.config.rateLimitWindowMs,\n            max: this.config.rateLimitMaxRequests\n        };\n    }\n    getBcryptRounds() {\n        return this.config.bcryptRounds;\n    }\n    getSessionTimeoutMs() {\n        return this.config.sessionTimeoutHours * 60 * 60 * 1000;\n    }\n    getDefaultAdminUsername() {\n        return this.config.defaultAdminUsername;\n    }\n    getDefaultAdminPassword() {\n        return this.config.defaultAdminPassword;\n    }\n    getPasswordMinLength() {\n        return this.config.passwordMinLength;\n    }\n    getPasswordMaxLength() {\n        return this.config.passwordMaxLength;\n    }\n    getStrictRateLimitConfig() {\n        return {\n            windowMs: this.config.strictRateLimitWindowMs,\n            max: this.config.strictRateLimitMaxRequests\n        };\n    }\n}\n// Export singleton instance\nconst config = new ConfigManager();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7OztDQUdDLEdBMkJELE1BQU1BO0lBR0osYUFBYztRQUNaLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUksQ0FBQ0MsVUFBVTtRQUM3QixJQUFJLENBQUNDLGNBQWM7SUFDckI7SUFFUUQsYUFBd0I7UUFDOUIsT0FBTztZQUNMRSxXQUFXQyxRQUFRQyxHQUFHLENBQUNDLFVBQVUsSUFBSSxJQUFJLENBQUNDLG1CQUFtQjtZQUM3REMsYUFBYSxJQUFJLENBQUNDLGNBQWM7WUFDaENDLGdCQUFnQixJQUFJLENBQUNDLGlCQUFpQjtZQUN0Q0MsMEJBQTBCUixRQUFRQyxHQUFHLENBQUNRLDJCQUEyQixLQUFLO1lBQ3RFQyxzQkFBc0JWLFFBQVFDLEdBQUcsQ0FBQ1Usc0JBQXNCLElBQUk7WUFDNURDLHNCQUFzQlosUUFBUUMsR0FBRyxDQUFDWSxzQkFBc0IsSUFBSTtZQUM1REMsbUJBQW1CQyxTQUFTZixRQUFRQyxHQUFHLENBQUNlLG1CQUFtQixJQUFJO1lBQy9EQyxtQkFBbUJGLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQ2lCLG1CQUFtQixJQUFJO1lBQy9EQyxtQkFBbUJKLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQ21CLG9CQUFvQixJQUFJO1lBQ2hFQyxzQkFBc0JOLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQ3FCLHVCQUF1QixJQUFJO1lBQ3RFQyx5QkFBeUJSLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQ3VCLDJCQUEyQixJQUFJO1lBQzdFQyw0QkFBNEJWLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQ3lCLDhCQUE4QixJQUFJO1lBQ25GQyxTQUFTM0IsaUJBQXdCLENBQWE7WUFDOUM0QixNQUFNYixTQUFTZixRQUFRQyxHQUFHLENBQUM0QixJQUFJLElBQUk7WUFDbkNDLGNBQWNmLFNBQVNmLFFBQVFDLEdBQUcsQ0FBQzhCLGFBQWEsSUFBSTtZQUNwREMscUJBQXFCakIsU0FBU2YsUUFBUUMsR0FBRyxDQUFDZ0MscUJBQXFCLElBQUk7UUFDckU7SUFDRjtJQUVROUIsc0JBQThCO1FBQ3BDLElBQUksSUFBSSxDQUFDK0IsWUFBWSxJQUFJO1lBQ3ZCLE1BQU0sSUFBSUMsTUFDUixnRUFDQTtRQUVKO1FBQ0FDLFFBQVFDLElBQUksQ0FBQztRQUNiLE9BQU87SUFDVDtJQUVRdkMsaUJBQXVCO1FBQzdCLE1BQU13QyxTQUFtQixFQUFFO1FBRTNCLCtCQUErQjtRQUMvQixJQUFJLElBQUksQ0FBQzFDLE1BQU0sQ0FBQ0csU0FBUyxDQUFDd0MsTUFBTSxHQUFHLElBQUk7WUFDckNELE9BQU9FLElBQUksQ0FBQztRQUNkO1FBRUEsSUFBSSxJQUFJLENBQUNOLFlBQVksTUFBTSxJQUFJLENBQUN0QyxNQUFNLENBQUNHLFNBQVMsQ0FBQzBDLFFBQVEsQ0FBQyxXQUN0RCxJQUFJLENBQUM3QyxNQUFNLENBQUNHLFNBQVMsQ0FBQzBDLFFBQVEsQ0FBQyxjQUMvQixJQUFJLENBQUM3QyxNQUFNLENBQUNHLFNBQVMsS0FBSyxtQkFBbUI7WUFDL0N1QyxPQUFPRSxJQUFJLENBQUM7UUFDZDtRQUVBLDBCQUEwQjtRQUMxQixJQUFJLElBQUksQ0FBQzVDLE1BQU0sQ0FBQ3VCLGlCQUFpQixHQUFHLE9BQU87WUFDekNtQixPQUFPRSxJQUFJLENBQUM7UUFDZDtRQUVBLElBQUksSUFBSSxDQUFDNUMsTUFBTSxDQUFDeUIsb0JBQW9CLEdBQUcsSUFBSTtZQUN6Q2lCLE9BQU9FLElBQUksQ0FBQztRQUNkO1FBRUEsSUFBSSxJQUFJLENBQUM1QyxNQUFNLENBQUNrQyxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUNsQyxNQUFNLENBQUNrQyxZQUFZLEdBQUcsSUFBSTtZQUNsRVEsT0FBT0UsSUFBSSxDQUFDO1FBQ2Q7UUFFQSxJQUFJRixPQUFPQyxNQUFNLEdBQUcsR0FBRztZQUNyQixNQUFNLElBQUlKLE1BQU0sQ0FBQyxrQ0FBa0MsRUFBRUcsT0FBT0ksSUFBSSxDQUFDLE9BQU87UUFDMUU7SUFDRjtJQUVPUixlQUF3QjtRQUM3QixPQUFPLElBQUksQ0FBQ3RDLE1BQU0sQ0FBQytCLE9BQU8sS0FBSztJQUNqQztJQUVPZ0IsZ0JBQXlCO1FBQzlCLE9BQU8sSUFBSSxDQUFDL0MsTUFBTSxDQUFDK0IsT0FBTyxLQUFLO0lBQ2pDO0lBRU9pQixNQUFpQjtRQUN0QixPQUFPO1lBQUUsR0FBRyxJQUFJLENBQUNoRCxNQUFNO1FBQUM7SUFDMUI7SUFFT2lELGVBQXVCO1FBQzVCLE9BQU8sSUFBSSxDQUFDakQsTUFBTSxDQUFDRyxTQUFTO0lBQzlCO0lBSU9NLGlCQUF5QjtRQUM5QixPQUFPTCxRQUFRQyxHQUFHLENBQUM2QyxZQUFZLElBQUk7SUFDckM7SUFFT3ZDLG9CQUFvQjtRQUN6QixPQUFPO1lBQ0x3QyxNQUFNL0MsUUFBUUMsR0FBRyxDQUFDK0MsYUFBYSxJQUFJO1lBQ25DcEIsTUFBTWIsU0FBU2YsUUFBUUMsR0FBRyxDQUFDZ0QsYUFBYSxJQUFJO1lBQzVDQyxVQUFVbEQsUUFBUUMsR0FBRyxDQUFDa0QsV0FBVyxJQUFJO1lBQ3JDQyxNQUFNcEQsUUFBUUMsR0FBRyxDQUFDb0QsYUFBYSxJQUFJO1lBQ25DQyxVQUFVdEQsUUFBUUMsR0FBRyxDQUFDc0QsaUJBQWlCLElBQUk7UUFDN0M7SUFDRjtJQUVPQyxpQ0FBMEM7UUFDL0MsT0FBTyxJQUFJLENBQUM1RCxNQUFNLENBQUNZLHdCQUF3QjtJQUM3QztJQUVPaUQscUJBQXdEO1FBQzdELE9BQU87WUFDTEMsVUFBVSxJQUFJLENBQUM5RCxNQUFNLENBQUN1QixpQkFBaUI7WUFDdkN3QyxLQUFLLElBQUksQ0FBQy9ELE1BQU0sQ0FBQ3lCLG9CQUFvQjtRQUN2QztJQUNGO0lBRU91QyxrQkFBMEI7UUFDL0IsT0FBTyxJQUFJLENBQUNoRSxNQUFNLENBQUNrQyxZQUFZO0lBQ2pDO0lBRU8rQixzQkFBOEI7UUFDbkMsT0FBTyxJQUFJLENBQUNqRSxNQUFNLENBQUNvQyxtQkFBbUIsR0FBRyxLQUFLLEtBQUs7SUFDckQ7SUFFTzhCLDBCQUFrQztRQUN2QyxPQUFPLElBQUksQ0FBQ2xFLE1BQU0sQ0FBQ2Msb0JBQW9CO0lBQ3pDO0lBRU9xRCwwQkFBa0M7UUFDdkMsT0FBTyxJQUFJLENBQUNuRSxNQUFNLENBQUNnQixvQkFBb0I7SUFDekM7SUFFT29ELHVCQUErQjtRQUNwQyxPQUFPLElBQUksQ0FBQ3BFLE1BQU0sQ0FBQ2tCLGlCQUFpQjtJQUN0QztJQUVPbUQsdUJBQStCO1FBQ3BDLE9BQU8sSUFBSSxDQUFDckUsTUFBTSxDQUFDcUIsaUJBQWlCO0lBQ3RDO0lBRU9pRCwyQkFBOEQ7UUFDbkUsT0FBTztZQUNMUixVQUFVLElBQUksQ0FBQzlELE1BQU0sQ0FBQzJCLHVCQUF1QjtZQUM3Q29DLEtBQUssSUFBSSxDQUFDL0QsTUFBTSxDQUFDNkIsMEJBQTBCO1FBQzdDO0lBQ0Y7QUFDRjtBQUVBLDRCQUE0QjtBQUNyQixNQUFNN0IsU0FBUyxJQUFJRCxnQkFBZ0I7QUFDMUMsaUVBQWVDLE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSW1hbmdcXERvY3VtZW50c1xcR2l0SHViXFxzZWxmLWNsYWltLWxpbmtcXGxpYlxcY29uZmlnLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29uZmlndXJhdGlvbiB1dGlsaXR5IGZvciBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbiAqIFByb3ZpZGVzIHR5cGUtc2FmZSBhY2Nlc3MgdG8gZW52aXJvbm1lbnQgY29uZmlndXJhdGlvblxuICovXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwQ29uZmlnIHtcbiAgand0U2VjcmV0OiBzdHJpbmc7XG4gIGRhdGFiYXNlVXJsOiBzdHJpbmc7XG4gIHBvc3RncmVzQ29uZmlnOiB7XG4gICAgaG9zdDogc3RyaW5nO1xuICAgIHBvcnQ6IG51bWJlcjtcbiAgICBkYXRhYmFzZTogc3RyaW5nO1xuICAgIHVzZXI6IHN0cmluZztcbiAgICBwYXNzd29yZDogc3RyaW5nO1xuICB9O1xuICBmb3JjZUFkbWluUGFzc3dvcmRDaGFuZ2U6IGJvb2xlYW47XG4gIGRlZmF1bHRBZG1pblVzZXJuYW1lOiBzdHJpbmc7XG4gIGRlZmF1bHRBZG1pblBhc3N3b3JkOiBzdHJpbmc7XG4gIHBhc3N3b3JkTWluTGVuZ3RoOiBudW1iZXI7XG4gIHBhc3N3b3JkTWF4TGVuZ3RoOiBudW1iZXI7XG4gIHJhdGVMaW1pdFdpbmRvd01zOiBudW1iZXI7XG4gIHJhdGVMaW1pdE1heFJlcXVlc3RzOiBudW1iZXI7XG4gIHN0cmljdFJhdGVMaW1pdFdpbmRvd01zOiBudW1iZXI7XG4gIHN0cmljdFJhdGVMaW1pdE1heFJlcXVlc3RzOiBudW1iZXI7XG4gIG5vZGVFbnY6IHN0cmluZztcbiAgcG9ydDogbnVtYmVyO1xuICBiY3J5cHRSb3VuZHM6IG51bWJlcjtcbiAgc2Vzc2lvblRpbWVvdXRIb3VyczogbnVtYmVyO1xufVxuXG5jbGFzcyBDb25maWdNYW5hZ2VyIHtcbiAgcHJpdmF0ZSBjb25maWc6IEFwcENvbmZpZztcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNvbmZpZyA9IHRoaXMubG9hZENvbmZpZygpO1xuICAgIHRoaXMudmFsaWRhdGVDb25maWcoKTtcbiAgfVxuXG4gIHByaXZhdGUgbG9hZENvbmZpZygpOiBBcHBDb25maWcge1xuICAgIHJldHVybiB7XG4gICAgICBqd3RTZWNyZXQ6IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQgfHwgdGhpcy5nZXREZWZhdWx0Snd0U2VjcmV0KCksXG4gICAgICBkYXRhYmFzZVVybDogdGhpcy5nZXREYXRhYmFzZVVybCgpLFxuICAgICAgcG9zdGdyZXNDb25maWc6IHRoaXMuZ2V0UG9zdGdyZXNDb25maWcoKSxcbiAgICAgIGZvcmNlQWRtaW5QYXNzd29yZENoYW5nZTogcHJvY2Vzcy5lbnYuRk9SQ0VfQURNSU5fUEFTU1dPUkRfQ0hBTkdFID09PSAndHJ1ZScsXG4gICAgICBkZWZhdWx0QWRtaW5Vc2VybmFtZTogcHJvY2Vzcy5lbnYuREVGQVVMVF9BRE1JTl9VU0VSTkFNRSB8fCAnYWRtaW4nLFxuICAgICAgZGVmYXVsdEFkbWluUGFzc3dvcmQ6IHByb2Nlc3MuZW52LkRFRkFVTFRfQURNSU5fUEFTU1dPUkQgfHwgJ3Bhc3N3b3JkJyxcbiAgICAgIHBhc3N3b3JkTWluTGVuZ3RoOiBwYXJzZUludChwcm9jZXNzLmVudi5QQVNTV09SRF9NSU5fTEVOR1RIIHx8ICc4JyksXG4gICAgICBwYXNzd29yZE1heExlbmd0aDogcGFyc2VJbnQocHJvY2Vzcy5lbnYuUEFTU1dPUkRfTUFYX0xFTkdUSCB8fCAnMTI4JyksXG4gICAgICByYXRlTGltaXRXaW5kb3dNczogcGFyc2VJbnQocHJvY2Vzcy5lbnYuUkFURV9MSU1JVF9XSU5ET1dfTVMgfHwgJzkwMDAwMCcpLFxuICAgICAgcmF0ZUxpbWl0TWF4UmVxdWVzdHM6IHBhcnNlSW50KHByb2Nlc3MuZW52LlJBVEVfTElNSVRfTUFYX1JFUVVFU1RTIHx8ICcxMDAnKSxcbiAgICAgIHN0cmljdFJhdGVMaW1pdFdpbmRvd01zOiBwYXJzZUludChwcm9jZXNzLmVudi5TVFJJQ1RfUkFURV9MSU1JVF9XSU5ET1dfTVMgfHwgJzkwMDAwMCcpLFxuICAgICAgc3RyaWN0UmF0ZUxpbWl0TWF4UmVxdWVzdHM6IHBhcnNlSW50KHByb2Nlc3MuZW52LlNUUklDVF9SQVRFX0xJTUlUX01BWF9SRVFVRVNUUyB8fCAnMTAnKSxcbiAgICAgIG5vZGVFbnY6IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCcsXG4gICAgICBwb3J0OiBwYXJzZUludChwcm9jZXNzLmVudi5QT1JUIHx8ICczMDAwJyksXG4gICAgICBiY3J5cHRSb3VuZHM6IHBhcnNlSW50KHByb2Nlc3MuZW52LkJDUllQVF9ST1VORFMgfHwgJzEyJyksXG4gICAgICBzZXNzaW9uVGltZW91dEhvdXJzOiBwYXJzZUludChwcm9jZXNzLmVudi5TRVNTSU9OX1RJTUVPVVRfSE9VUlMgfHwgJzI0JylcbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSBnZXREZWZhdWx0Snd0U2VjcmV0KCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuaXNQcm9kdWN0aW9uKCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0pXVF9TRUNSRVQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgcmVxdWlyZWQgaW4gcHJvZHVjdGlvbi4gJyArXG4gICAgICAgICdHZW5lcmF0ZSBhIHNlY3VyZSBzZWNyZXQgdXNpbmc6IG9wZW5zc2wgcmFuZCAtYmFzZTY0IDMyJ1xuICAgICAgKTtcbiAgICB9XG4gICAgY29uc29sZS53YXJuKCfimqDvuI8gIFVzaW5nIGRlZmF1bHQgSldUIHNlY3JldCBmb3IgZGV2ZWxvcG1lbnQuIFNldCBKV1RfU0VDUkVUIGluIHByb2R1Y3Rpb24hJyk7XG4gICAgcmV0dXJuICdkZXYtand0LXNlY3JldC1jaGFuZ2UtZm9yLXByb2R1Y3Rpb24tdXNlJztcbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVDb25maWcoKTogdm9pZCB7XG4gICAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgLy8gVmFsaWRhdGUgSldUIHNlY3JldCBzdHJlbmd0aFxuICAgIGlmICh0aGlzLmNvbmZpZy5qd3RTZWNyZXQubGVuZ3RoIDwgMzIpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdKV1RfU0VDUkVUIG11c3QgYmUgYXQgbGVhc3QgMzIgY2hhcmFjdGVycyBsb25nJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNQcm9kdWN0aW9uKCkgJiYgdGhpcy5jb25maWcuand0U2VjcmV0LmluY2x1ZGVzKCdkZXYtJykgfHwgXG4gICAgICAgIHRoaXMuY29uZmlnLmp3dFNlY3JldC5pbmNsdWRlcygnY2hhbmdlLScpIHx8XG4gICAgICAgIHRoaXMuY29uZmlnLmp3dFNlY3JldCA9PT0gJ3lvdXItc2VjcmV0LWtleScpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdKV1RfU0VDUkVUIG11c3QgYmUgY2hhbmdlZCBmcm9tIGRlZmF1bHQgdmFsdWUgaW4gcHJvZHVjdGlvbicpO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIG51bWVyaWMgdmFsdWVzXG4gICAgaWYgKHRoaXMuY29uZmlnLnJhdGVMaW1pdFdpbmRvd01zIDwgNjAwMDApIHtcbiAgICAgIGVycm9ycy5wdXNoKCdSQVRFX0xJTUlUX1dJTkRPV19NUyBtdXN0IGJlIGF0IGxlYXN0IDYwMDAwICgxIG1pbnV0ZSknKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jb25maWcucmF0ZUxpbWl0TWF4UmVxdWVzdHMgPCAxMCkge1xuICAgICAgZXJyb3JzLnB1c2goJ1JBVEVfTElNSVRfTUFYX1JFUVVFU1RTIG11c3QgYmUgYXQgbGVhc3QgMTAnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jb25maWcuYmNyeXB0Um91bmRzIDwgMTAgfHwgdGhpcy5jb25maWcuYmNyeXB0Um91bmRzID4gMTUpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdCQ1JZUFRfUk9VTkRTIG11c3QgYmUgYmV0d2VlbiAxMCBhbmQgMTUnKTtcbiAgICB9XG5cbiAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ29uZmlndXJhdGlvbiB2YWxpZGF0aW9uIGZhaWxlZDpcXG4ke2Vycm9ycy5qb2luKCdcXG4nKX1gKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaXNQcm9kdWN0aW9uKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5ub2RlRW52ID09PSAncHJvZHVjdGlvbic7XG4gIH1cblxuICBwdWJsaWMgaXNEZXZlbG9wbWVudCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWcubm9kZUVudiA9PT0gJ2RldmVsb3BtZW50JztcbiAgfVxuXG4gIHB1YmxpYyBnZXQoKTogQXBwQ29uZmlnIHtcbiAgICByZXR1cm4geyAuLi50aGlzLmNvbmZpZyB9O1xuICB9XG5cbiAgcHVibGljIGdldEp3dFNlY3JldCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5qd3RTZWNyZXQ7XG4gIH1cblxuXG5cbiAgcHVibGljIGdldERhdGFiYXNlVXJsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCB8fCAnJztcbiAgfVxuXG4gIHB1YmxpYyBnZXRQb3N0Z3Jlc0NvbmZpZygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaG9zdDogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfSE9TVCB8fCAnbG9jYWxob3N0JyxcbiAgICAgIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52LlBPU1RHUkVTX1BPUlQgfHwgJzU0MzInKSxcbiAgICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5QT1NUR1JFU19EQiB8fCAnc2VsZmNsYWltbGluaycsXG4gICAgICB1c2VyOiBwcm9jZXNzLmVudi5QT1NUR1JFU19VU0VSIHx8ICdwb3N0Z3JlcycsXG4gICAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfUEFTU1dPUkQgfHwgJydcbiAgICB9O1xuICB9XG5cbiAgcHVibGljIHNob3VsZEZvcmNlQWRtaW5QYXNzd29yZENoYW5nZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWcuZm9yY2VBZG1pblBhc3N3b3JkQ2hhbmdlO1xuICB9XG5cbiAgcHVibGljIGdldFJhdGVMaW1pdENvbmZpZygpOiB7IHdpbmRvd01zOiBudW1iZXI7IG1heDogbnVtYmVyIH0ge1xuICAgIHJldHVybiB7XG4gICAgICB3aW5kb3dNczogdGhpcy5jb25maWcucmF0ZUxpbWl0V2luZG93TXMsXG4gICAgICBtYXg6IHRoaXMuY29uZmlnLnJhdGVMaW1pdE1heFJlcXVlc3RzLFxuICAgIH07XG4gIH1cblxuICBwdWJsaWMgZ2V0QmNyeXB0Um91bmRzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLmJjcnlwdFJvdW5kcztcbiAgfVxuXG4gIHB1YmxpYyBnZXRTZXNzaW9uVGltZW91dE1zKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLnNlc3Npb25UaW1lb3V0SG91cnMgKiA2MCAqIDYwICogMTAwMDtcbiAgfVxuXG4gIHB1YmxpYyBnZXREZWZhdWx0QWRtaW5Vc2VybmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5kZWZhdWx0QWRtaW5Vc2VybmFtZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXREZWZhdWx0QWRtaW5QYXNzd29yZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5kZWZhdWx0QWRtaW5QYXNzd29yZDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRQYXNzd29yZE1pbkxlbmd0aCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5wYXNzd29yZE1pbkxlbmd0aDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRQYXNzd29yZE1heExlbmd0aCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5wYXNzd29yZE1heExlbmd0aDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdHJpY3RSYXRlTGltaXRDb25maWcoKTogeyB3aW5kb3dNczogbnVtYmVyOyBtYXg6IG51bWJlciB9IHtcbiAgICByZXR1cm4ge1xuICAgICAgd2luZG93TXM6IHRoaXMuY29uZmlnLnN0cmljdFJhdGVMaW1pdFdpbmRvd01zLFxuICAgICAgbWF4OiB0aGlzLmNvbmZpZy5zdHJpY3RSYXRlTGltaXRNYXhSZXF1ZXN0cyxcbiAgICB9O1xuICB9XG59XG5cbi8vIEV4cG9ydCBzaW5nbGV0b24gaW5zdGFuY2VcbmV4cG9ydCBjb25zdCBjb25maWcgPSBuZXcgQ29uZmlnTWFuYWdlcigpO1xuZXhwb3J0IGRlZmF1bHQgY29uZmlnO1xuIl0sIm5hbWVzIjpbIkNvbmZpZ01hbmFnZXIiLCJjb25maWciLCJsb2FkQ29uZmlnIiwidmFsaWRhdGVDb25maWciLCJqd3RTZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImdldERlZmF1bHRKd3RTZWNyZXQiLCJkYXRhYmFzZVVybCIsImdldERhdGFiYXNlVXJsIiwicG9zdGdyZXNDb25maWciLCJnZXRQb3N0Z3Jlc0NvbmZpZyIsImZvcmNlQWRtaW5QYXNzd29yZENoYW5nZSIsIkZPUkNFX0FETUlOX1BBU1NXT1JEX0NIQU5HRSIsImRlZmF1bHRBZG1pblVzZXJuYW1lIiwiREVGQVVMVF9BRE1JTl9VU0VSTkFNRSIsImRlZmF1bHRBZG1pblBhc3N3b3JkIiwiREVGQVVMVF9BRE1JTl9QQVNTV09SRCIsInBhc3N3b3JkTWluTGVuZ3RoIiwicGFyc2VJbnQiLCJQQVNTV09SRF9NSU5fTEVOR1RIIiwicGFzc3dvcmRNYXhMZW5ndGgiLCJQQVNTV09SRF9NQVhfTEVOR1RIIiwicmF0ZUxpbWl0V2luZG93TXMiLCJSQVRFX0xJTUlUX1dJTkRPV19NUyIsInJhdGVMaW1pdE1heFJlcXVlc3RzIiwiUkFURV9MSU1JVF9NQVhfUkVRVUVTVFMiLCJzdHJpY3RSYXRlTGltaXRXaW5kb3dNcyIsIlNUUklDVF9SQVRFX0xJTUlUX1dJTkRPV19NUyIsInN0cmljdFJhdGVMaW1pdE1heFJlcXVlc3RzIiwiU1RSSUNUX1JBVEVfTElNSVRfTUFYX1JFUVVFU1RTIiwibm9kZUVudiIsInBvcnQiLCJQT1JUIiwiYmNyeXB0Um91bmRzIiwiQkNSWVBUX1JPVU5EUyIsInNlc3Npb25UaW1lb3V0SG91cnMiLCJTRVNTSU9OX1RJTUVPVVRfSE9VUlMiLCJpc1Byb2R1Y3Rpb24iLCJFcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwiZXJyb3JzIiwibGVuZ3RoIiwicHVzaCIsImluY2x1ZGVzIiwiam9pbiIsImlzRGV2ZWxvcG1lbnQiLCJnZXQiLCJnZXRKd3RTZWNyZXQiLCJEQVRBQkFTRV9VUkwiLCJob3N0IiwiUE9TVEdSRVNfSE9TVCIsIlBPU1RHUkVTX1BPUlQiLCJkYXRhYmFzZSIsIlBPU1RHUkVTX0RCIiwidXNlciIsIlBPU1RHUkVTX1VTRVIiLCJwYXNzd29yZCIsIlBPU1RHUkVTX1BBU1NXT1JEIiwic2hvdWxkRm9yY2VBZG1pblBhc3N3b3JkQ2hhbmdlIiwiZ2V0UmF0ZUxpbWl0Q29uZmlnIiwid2luZG93TXMiLCJtYXgiLCJnZXRCY3J5cHRSb3VuZHMiLCJnZXRTZXNzaW9uVGltZW91dE1zIiwiZ2V0RGVmYXVsdEFkbWluVXNlcm5hbWUiLCJnZXREZWZhdWx0QWRtaW5QYXNzd29yZCIsImdldFBhc3N3b3JkTWluTGVuZ3RoIiwiZ2V0UGFzc3dvcmRNYXhMZW5ndGgiLCJnZXRTdHJpY3RSYXRlTGltaXRDb25maWciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/config.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeDatabase: () => (/* binding */ closeDatabase),\n/* harmony export */   getAdminByUsername: () => (/* binding */ getAdminByUsername),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase),\n/* harmony export */   isAdminLocked: () => (/* binding */ isAdminLocked),\n/* harmony export */   recordFailedLogin: () => (/* binding */ recordFailedLogin),\n/* harmony export */   resetFailedLogins: () => (/* binding */ resetFailedLogins),\n/* harmony export */   updateAdminPassword: () => (/* binding */ updateAdminPassword)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ \"(rsc)/./lib/config.ts\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger */ \"(rsc)/./lib/logger.ts\");\n/* harmony import */ var _errorHandler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errorHandler */ \"(rsc)/./lib/errorHandler.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_0__]);\npg__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/**\n * PostgreSQL Database Layer\n * Production-ready database implementation\n */ \n\n\n\n\nlet pool = null;\nasync function getDatabase() {\n    if (pool) return pool;\n    const postgresConfig = _config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getPostgresConfig();\n    pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool({\n        host: postgresConfig.host,\n        port: postgresConfig.port,\n        database: postgresConfig.database,\n        user: postgresConfig.user,\n        password: postgresConfig.password,\n        max: 20,\n        idleTimeoutMillis: 30000,\n        connectionTimeoutMillis: 2000,\n        ssl:  false ? 0 : false\n    });\n    // Test connection\n    try {\n        const client = await pool.connect();\n        await client.query('SELECT NOW()');\n        client.release();\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info('PostgreSQL database connection established');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to connect to PostgreSQL:', {\n            error\n        });\n        throw new _errorHandler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError('PostgreSQL connection failed');\n    }\n    // Initialize database schema\n    await initializeDatabase();\n    return pool;\n}\nasync function initializeDatabase() {\n    if (!pool) throw new _errorHandler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError('Database pool not established');\n    const client = await pool.connect();\n    try {\n        // Create tables with proper PostgreSQL syntax\n        await client.query(`\n      CREATE TABLE IF NOT EXISTS products (\n        id SERIAL PRIMARY KEY,\n        name VARCHAR(255) NOT NULL,\n        description TEXT,\n        download_link TEXT NOT NULL,\n        image_url TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `);\n        await client.query(`\n      CREATE TABLE IF NOT EXISTS orders (\n        id SERIAL PRIMARY KEY,\n        order_id VARCHAR(255) UNIQUE NOT NULL,\n        claim_status VARCHAR(50) DEFAULT 'available',\n        claim_timestamp TIMESTAMP,\n        claim_count INTEGER DEFAULT 0,\n        expiration_date TIMESTAMP,\n        one_time_use BOOLEAN DEFAULT true,\n        created_by VARCHAR(255),\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `);\n        await client.query(`\n      CREATE TABLE IF NOT EXISTS order_products (\n        id SERIAL PRIMARY KEY,\n        order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,\n        product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        UNIQUE(order_id, product_id)\n      );\n    `);\n        await client.query(`\n      CREATE TABLE IF NOT EXISTS admins (\n        id SERIAL PRIMARY KEY,\n        username VARCHAR(255) UNIQUE NOT NULL,\n        password_hash TEXT NOT NULL,\n        must_change_password BOOLEAN DEFAULT false,\n        failed_login_attempts INTEGER DEFAULT 0,\n        locked_until TIMESTAMP,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `);\n        await client.query(`\n      CREATE TABLE IF NOT EXISTS settings (\n        id SERIAL PRIMARY KEY,\n        key VARCHAR(255) UNIQUE NOT NULL,\n        value TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      );\n    `);\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info('PostgreSQL database schema initialized successfully');\n        // Create default admin if not exists\n        await createDefaultAdmin(client);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Database initialization failed:', {\n            error\n        });\n        throw new _errorHandler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError('Failed to initialize database schema');\n    } finally{\n        client.release();\n    }\n}\nasync function createDefaultAdmin(client) {\n    try {\n        const defaultUsername = _config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDefaultAdminUsername();\n        // Check if admin already exists\n        const result = await client.query('SELECT id FROM admins WHERE username = $1', [\n            defaultUsername\n        ]);\n        if (result.rows.length === 0) {\n            const defaultPassword = _config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDefaultAdminPassword(); // This will force password change\n            const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(defaultPassword, _config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().bcryptRounds);\n            await client.query('INSERT INTO admins (username, password_hash, must_change_password) VALUES ($1, $2, $3)', [\n                defaultUsername,\n                hashedPassword,\n                true\n            ]);\n            _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(`Default admin '${defaultUsername}' created`);\n        }\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to create default admin:', {\n            error\n        });\n        throw new _errorHandler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError('Failed to create default admin');\n    }\n}\nasync function closeDatabase() {\n    if (pool) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info('Closing PostgreSQL database connection');\n        await pool.end();\n        pool = null;\n    }\n}\n/**\n * Get admin by username with security checks\n */ async function getAdminByUsername(username) {\n    try {\n        const pool = await getDatabase();\n        const result = await pool.query('SELECT * FROM admins WHERE username = $1', [\n            username\n        ]);\n        return result.rows[0] || null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to get admin by username', {\n            username,\n            error\n        });\n        throw new _errorHandler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError('Failed to retrieve admin user');\n    }\n}\n/**\n * Update admin password with security tracking\n */ async function updateAdminPassword(adminId, newPasswordHash) {\n    try {\n        const pool = await getDatabase();\n        await pool.query(`\n      UPDATE admins \n      SET password_hash = $1, \n          must_change_password = false,\n          updated_at = CURRENT_TIMESTAMP,\n          failed_login_attempts = 0,\n          locked_until = NULL\n      WHERE id = $2\n    `, [\n            newPasswordHash,\n            adminId\n        ]);\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info('Admin password updated', {\n            adminId\n        });\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to update admin password', {\n            adminId,\n            error\n        });\n        throw new _errorHandler__WEBPACK_IMPORTED_MODULE_4__.DatabaseError('Failed to update password');\n    }\n}\n/**\n * Record failed login attempt\n */ async function recordFailedLogin(username) {\n    try {\n        const pool = await getDatabase();\n        const result = await pool.query(`\n      UPDATE admins \n      SET failed_login_attempts = failed_login_attempts + 1,\n          locked_until = CASE \n            WHEN failed_login_attempts >= 4 THEN NOW() + INTERVAL '30 minutes'\n            ELSE locked_until\n          END\n      WHERE username = $1\n    `, [\n            username\n        ]);\n        if (result.rowCount && result.rowCount > 0) {\n            _logger__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Failed login attempt recorded', {\n                username\n            });\n        }\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to record login attempt', {\n            username,\n            error\n        });\n    }\n}\n/**\n * Reset failed login attempts on successful login\n */ async function resetFailedLogins(username) {\n    try {\n        const pool = await getDatabase();\n        await pool.query(`\n      UPDATE admins \n      SET failed_login_attempts = 0,\n          locked_until = NULL\n      WHERE username = $1\n    `, [\n            username\n        ]);\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.info('Failed login attempts reset', {\n            username\n        });\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to reset login attempts', {\n            username,\n            error\n        });\n    }\n}\n/**\n * Check if admin account is locked\n */ async function isAdminLocked(username) {\n    try {\n        const pool = await getDatabase();\n        const result = await pool.query(`\n      SELECT locked_until \n      FROM admins \n      WHERE username = $1 AND locked_until > NOW()\n    `, [\n            username\n        ]);\n        return result.rows.length > 0;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_3__.logger.error('Failed to check admin lock status', {\n            username,\n            error\n        });\n        return false;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./lib/errorHandler.ts":
/*!*****************************!*\
  !*** ./lib/errorHandler.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppError: () => (/* binding */ AppError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   AuthorizationError: () => (/* binding */ AuthorizationError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   DatabaseError: () => (/* binding */ DatabaseError),\n/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   createErrorResponse: () => (/* binding */ createErrorResponse),\n/* harmony export */   createSuccessResponse: () => (/* binding */ createSuccessResponse),\n/* harmony export */   validateOrThrow: () => (/* binding */ validateOrThrow),\n/* harmony export */   withDatabaseErrorHandling: () => (/* binding */ withDatabaseErrorHandling),\n/* harmony export */   withErrorHandler: () => (/* binding */ withErrorHandler)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validation */ \"(rsc)/./lib/validation.ts\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ \"(rsc)/./lib/logger.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config */ \"(rsc)/./lib/config.ts\");\n/**\n * Centralized error handling utilities\n * Provides consistent error responses and logging\n */ \n\n\n\nvar ErrorCode = /*#__PURE__*/ function(ErrorCode) {\n    ErrorCode[\"VALIDATION_ERROR\"] = \"VALIDATION_ERROR\";\n    ErrorCode[\"AUTHENTICATION_ERROR\"] = \"AUTHENTICATION_ERROR\";\n    ErrorCode[\"AUTHORIZATION_ERROR\"] = \"AUTHORIZATION_ERROR\";\n    ErrorCode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    ErrorCode[\"CONFLICT\"] = \"CONFLICT\";\n    ErrorCode[\"RATE_LIMIT_EXCEEDED\"] = \"RATE_LIMIT_EXCEEDED\";\n    ErrorCode[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n    ErrorCode[\"DATABASE_ERROR\"] = \"DATABASE_ERROR\";\n    ErrorCode[\"EXTERNAL_SERVICE_ERROR\"] = \"EXTERNAL_SERVICE_ERROR\";\n    return ErrorCode;\n}({});\nclass AppError extends Error {\n    constructor(code, message, statusCode = 500, details){\n        super(message), this.code = code, this.statusCode = statusCode, this.details = details;\n        this.name = 'AppError';\n    }\n}\nclass AuthenticationError extends AppError {\n    constructor(message = 'Authentication required'){\n        super(\"AUTHENTICATION_ERROR\", message, 401);\n    }\n}\nclass AuthorizationError extends AppError {\n    constructor(message = 'Insufficient permissions'){\n        super(\"AUTHORIZATION_ERROR\", message, 403);\n    }\n}\nclass NotFoundError extends AppError {\n    constructor(resource = 'Resource'){\n        super(\"NOT_FOUND\", `${resource} not found`, 404);\n    }\n}\nclass ConflictError extends AppError {\n    constructor(message = 'Resource conflict'){\n        super(\"CONFLICT\", message, 409);\n    }\n}\nclass DatabaseError extends AppError {\n    constructor(message = 'Database operation failed', details){\n        super(\"DATABASE_ERROR\", message, 500, details);\n    }\n}\n/**\n * Create standardized error response\n */ function createErrorResponse(error, requestId) {\n    const timestamp = new Date().toISOString();\n    const id = requestId || (0,_logger__WEBPACK_IMPORTED_MODULE_2__.generateRequestId)();\n    // Handle different error types\n    if (error instanceof _validation__WEBPACK_IMPORTED_MODULE_1__.ValidationError) {\n        const response = {\n            success: false,\n            error: {\n                code: \"VALIDATION_ERROR\",\n                message: 'Validation failed',\n                details: error.errors,\n                timestamp,\n                requestId: id\n            }\n        };\n        _logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Validation error', {\n            requestId: id,\n            errors: error.errors\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n            status: 400\n        });\n    }\n    if (error instanceof AppError) {\n        const response = {\n            success: false,\n            error: {\n                code: error.code,\n                message: error.message,\n                details: error.details,\n                timestamp,\n                requestId: id\n            }\n        };\n        _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Application error: ${error.message}`, {\n            requestId: id,\n            code: error.code,\n            details: error.details\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n            status: error.statusCode\n        });\n    }\n    // Handle database errors\n    if (error.message.includes('database')) {\n        const response = {\n            success: false,\n            error: {\n                code: \"DATABASE_ERROR\",\n                message: 'Database operation failed',\n                timestamp,\n                requestId: id\n            }\n        };\n        _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error('Database error', {\n            requestId: id,\n            originalError: error.message\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n            status: 500\n        });\n    }\n    // Generic error handling\n    const response = {\n        success: false,\n        error: {\n            code: \"INTERNAL_ERROR\",\n            message: _config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isDevelopment() ? error.message : 'Internal server error',\n            timestamp,\n            requestId: id\n        }\n    };\n    _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error('Unhandled error', {\n        requestId: id,\n        error\n    });\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n        status: 500\n    });\n}\n/**\n * Async error handler wrapper for API routes\n */ function withErrorHandler(handler) {\n    return async (...args)=>{\n        const requestId = (0,_logger__WEBPACK_IMPORTED_MODULE_2__.generateRequestId)();\n        try {\n            _logger__WEBPACK_IMPORTED_MODULE_2__.logger.info('API request started', {\n                requestId\n            });\n            const response = await handler(...args);\n            _logger__WEBPACK_IMPORTED_MODULE_2__.logger.info('API request completed', {\n                requestId,\n                status: response.status\n            });\n            return response;\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error('API request failed', {\n                requestId,\n                error\n            });\n            return createErrorResponse(error, requestId);\n        }\n    };\n}\n/**\n * Success response helper\n */ function createSuccessResponse(data, status = 200) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        data,\n        timestamp: new Date().toISOString()\n    }, {\n        status\n    });\n}\n/**\n * Validation helper that throws AppError\n */ function validateOrThrow(validationFn, data) {\n    const result = validationFn(data);\n    if (!result.isValid) {\n        throw new _validation__WEBPACK_IMPORTED_MODULE_1__.ValidationError(result.errors);\n    }\n    return result.sanitizedData;\n}\n/**\n * Database operation wrapper with error handling\n */ async function withDatabaseErrorHandling(operation, operationName = 'Database operation') {\n    try {\n        return await operation();\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error(`${operationName} failed`, {\n            error\n        });\n        throw new DatabaseError(`${operationName} failed`, error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/errorHandler.ts\n");

/***/ }),

/***/ "(rsc)/./lib/logger.ts":
/*!***********************!*\
  !*** ./lib/logger.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   generateRequestId: () => (/* binding */ generateRequestId),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   measurePerformance: () => (/* binding */ measurePerformance)\n/* harmony export */ });\n/* harmony import */ var winston__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! winston */ \"(rsc)/./node_modules/winston/lib/winston.js\");\n/* harmony import */ var winston__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(winston__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(rsc)/./lib/config.ts\");\n/**\n * Enhanced logging system with structured logging, performance monitoring, and error tracking\n */ \n\n// Log levels\nvar LogLevel = /*#__PURE__*/ function(LogLevel) {\n    LogLevel[\"ERROR\"] = \"error\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"HTTP\"] = \"http\";\n    LogLevel[\"DEBUG\"] = \"debug\";\n    return LogLevel;\n}({});\nclass Logger {\n    constructor(){\n        this.isDevelopment = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isDevelopment();\n        this.winston = this.createWinstonLogger();\n    }\n    createWinstonLogger() {\n        const formats = [\n            winston__WEBPACK_IMPORTED_MODULE_0___default().format.timestamp(),\n            winston__WEBPACK_IMPORTED_MODULE_0___default().format.errors({\n                stack: true\n            }),\n            winston__WEBPACK_IMPORTED_MODULE_0___default().format.json()\n        ];\n        if (this.isDevelopment) {\n            formats.push(winston__WEBPACK_IMPORTED_MODULE_0___default().format.colorize(), winston__WEBPACK_IMPORTED_MODULE_0___default().format.simple());\n        }\n        return winston__WEBPACK_IMPORTED_MODULE_0___default().createLogger({\n            level: this.isDevelopment ? 'debug' : 'info',\n            format: winston__WEBPACK_IMPORTED_MODULE_0___default().format.combine(...formats),\n            defaultMeta: {\n                service: 'self-claim-link',\n                environment: \"development\" || 0\n            },\n            transports: [\n                // Console transport\n                new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).Console({\n                    format: this.isDevelopment ? winston__WEBPACK_IMPORTED_MODULE_0___default().format.combine(winston__WEBPACK_IMPORTED_MODULE_0___default().format.colorize(), winston__WEBPACK_IMPORTED_MODULE_0___default().format.simple()) : winston__WEBPACK_IMPORTED_MODULE_0___default().format.json()\n                }),\n                // File transports for production\n                ...this.isDevelopment ? [] : [\n                    new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).File({\n                        filename: 'logs/error.log',\n                        level: 'error',\n                        maxsize: 5242880,\n                        maxFiles: 5\n                    }),\n                    new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).File({\n                        filename: 'logs/combined.log',\n                        maxsize: 5242880,\n                        maxFiles: 10\n                    })\n                ]\n            ],\n            exceptionHandlers: [\n                new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).Console(),\n                ...this.isDevelopment ? [] : [\n                    new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).File({\n                        filename: 'logs/exceptions.log'\n                    })\n                ]\n            ],\n            rejectionHandlers: [\n                new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).Console(),\n                ...this.isDevelopment ? [] : [\n                    new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).File({\n                        filename: 'logs/rejections.log'\n                    })\n                ]\n            ]\n        });\n    }\n    // Core logging methods\n    error(message, context) {\n        this.winston.error(message, context);\n    }\n    warn(message, context) {\n        this.winston.warn(message, context);\n    }\n    info(message, context) {\n        this.winston.info(message, context);\n    }\n    http(message, context) {\n        this.winston.http(message, context);\n    }\n    debug(message, context) {\n        this.winston.debug(message, context);\n    }\n    // Business event logging\n    logBusinessEvent(event) {\n        this.info(`Business Event: ${event.event}`, {\n            eventType: 'business',\n            event: event.event,\n            data: event.data,\n            timestamp: event.timestamp || new Date()\n        });\n    }\n    // Performance monitoring\n    logPerformance(metrics) {\n        const level = metrics.success ? 'info' : 'warn';\n        this.winston.log(level, `Performance: ${metrics.operation}`, {\n            eventType: 'performance',\n            operation: metrics.operation,\n            duration: metrics.duration,\n            success: metrics.success,\n            metadata: metrics.metadata\n        });\n    }\n    // Database operation logging\n    logDatabaseOperation(operation, duration, success, error) {\n        const context = {\n            eventType: 'database',\n            operation,\n            duration,\n            success\n        };\n        if (error) {\n            context.error = error;\n        }\n        if (success) {\n            this.debug(`DB Operation: ${operation} (${duration}ms)`, context);\n        } else {\n            this.error(`DB Operation Failed: ${operation}`, context);\n        }\n    }\n    // API request/response logging\n    logApiRequest(method, url, context) {\n        this.http(`${method} ${url}`, {\n            eventType: 'api_request',\n            method,\n            url,\n            ...context\n        });\n    }\n    logApiResponse(method, url, statusCode, duration, context) {\n        const level = statusCode >= 400 ? 'warn' : 'info';\n        this.winston.log(level, `${method} ${url} ${statusCode} (${duration}ms)`, {\n            eventType: 'api_response',\n            method,\n            url,\n            statusCode,\n            duration,\n            ...context\n        });\n    }\n    // Security event logging\n    logSecurityEvent(event, context) {\n        this.warn(`Security Event: ${event}`, {\n            eventType: 'security',\n            event,\n            ...context\n        });\n    }\n    // Authentication logging\n    logAuth(event, context) {\n        const level = event === 'login_failure' ? 'warn' : 'info';\n        this.winston.log(level, `Auth: ${event}`, {\n            eventType: 'auth',\n            event,\n            ...context\n        });\n    }\n    // Claim operation logging\n    logClaimOperation(orderId, success, reason, context) {\n        this.logBusinessEvent({\n            event: success ? 'claim_success' : 'claim_failure',\n            data: {\n                orderId,\n                success,\n                reason,\n                ...context\n            }\n        });\n    }\n    // Product operation logging\n    logProductOperation(operation, productId, context) {\n        this.logBusinessEvent({\n            event: `product_${operation}`,\n            data: {\n                productId,\n                operation,\n                ...context\n            }\n        });\n    }\n    // Order operation logging\n    logOrderOperation(operation, orderId, context) {\n        this.logBusinessEvent({\n            event: `order_${operation}`,\n            data: {\n                orderId,\n                operation,\n                ...context\n            }\n        });\n    }\n}\n// Create singleton instance\nconst logger = new Logger();\n// Performance measurement utility\nfunction measurePerformance(operation, fn, metadata) {\n    const start = Date.now();\n    return fn().then((result)=>{\n        const duration = Date.now() - start;\n        logger.logPerformance({\n            operation,\n            duration,\n            success: true,\n            metadata\n        });\n        return result;\n    }).catch((error)=>{\n        const duration = Date.now() - start;\n        logger.logPerformance({\n            operation,\n            duration,\n            success: false,\n            metadata: {\n                ...metadata,\n                error: error.message\n            }\n        });\n        throw error;\n    });\n}\n// Request ID generation\nfunction generateRequestId() {\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/validation.ts":
/*!***************************!*\
  !*** ./lib/validation.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   sanitizeString: () => (/* binding */ sanitizeString),\n/* harmony export */   validateAdminCredentials: () => (/* binding */ validateAdminCredentials),\n/* harmony export */   validateOrderData: () => (/* binding */ validateOrderData),\n/* harmony export */   validateOrderId: () => (/* binding */ validateOrderId),\n/* harmony export */   validateProductData: () => (/* binding */ validateProductData),\n/* harmony export */   validateRequest: () => (/* binding */ validateRequest),\n/* harmony export */   validateSettingsData: () => (/* binding */ validateSettingsData)\n/* harmony export */ });\n/**\n * Input validation and sanitization utilities\n * Provides comprehensive validation for all API endpoints\n */ class ValidationError extends Error {\n    constructor(errors){\n        super(`Validation failed: ${errors.join(', ')}`), this.errors = errors;\n        this.name = 'ValidationError';\n    }\n}\n/**\n * Sanitize string input by removing potentially dangerous characters\n */ function sanitizeString(input, maxLength = 255) {\n    if (typeof input !== 'string') {\n        throw new ValidationError([\n            'Input must be a string'\n        ]);\n    }\n    return input.trim().slice(0, maxLength).replace(/[<>'\"&]/g, '') // Remove basic XSS characters\n    .replace(/\\0/g, ''); // Remove null bytes\n}\n/**\n * Validate and sanitize order ID\n */ function validateOrderId(orderId) {\n    const errors = [];\n    if (!orderId) {\n        errors.push('Order ID is required');\n        return {\n            isValid: false,\n            errors\n        };\n    }\n    if (typeof orderId !== 'string') {\n        errors.push('Order ID must be a string');\n        return {\n            isValid: false,\n            errors\n        };\n    }\n    const sanitized = sanitizeString(orderId, 50);\n    if (sanitized.length < 3) {\n        errors.push('Order ID must be at least 3 characters long');\n    }\n    if (sanitized.length > 50) {\n        errors.push('Order ID must be less than 50 characters');\n    }\n    if (!/^[a-zA-Z0-9\\-_]+$/.test(sanitized)) {\n        errors.push('Order ID can only contain letters, numbers, hyphens, and underscores');\n    }\n    return {\n        isValid: errors.length === 0,\n        errors,\n        sanitizedData: sanitized\n    };\n}\n/**\n * Validate admin credentials\n */ function validateAdminCredentials(data) {\n    const { username, password } = data;\n    const errors = [];\n    let sanitizedData = {};\n    // Validate username\n    if (!username) {\n        errors.push('Username is required');\n    } else if (typeof username !== 'string') {\n        errors.push('Username must be a string');\n    } else {\n        const sanitizedUsername = sanitizeString(username, 50);\n        if (sanitizedUsername.length < 3) {\n            errors.push('Username must be at least 3 characters long');\n        }\n        if (sanitizedUsername.length > 50) {\n            errors.push('Username must be less than 50 characters');\n        }\n        if (!/^[a-zA-Z0-9_]+$/.test(sanitizedUsername)) {\n            errors.push('Username can only contain letters, numbers, and underscores');\n        }\n        sanitizedData.username = sanitizedUsername;\n    }\n    // Validate password (for authentication - only check if provided, no complexity rules)\n    if (!password) {\n        errors.push('Password is required');\n    } else if (typeof password !== 'string') {\n        errors.push('Password must be a string');\n    } else {\n        // For authentication, accept any password that was previously set\n        // Password complexity rules are only enforced during password creation/change\n        sanitizedData.password = password;\n    }\n    return {\n        isValid: errors.length === 0,\n        errors,\n        sanitizedData\n    };\n}\n/**\n * Validate product data\n */ function validateProductData(data) {\n    const errors = [];\n    let sanitizedData = {};\n    // Validate name\n    if (!data.name) {\n        errors.push('Product name is required');\n    } else if (typeof data.name !== 'string') {\n        errors.push('Product name must be a string');\n    } else {\n        const sanitizedName = sanitizeString(data.name, 100);\n        if (sanitizedName.length < 2) {\n            errors.push('Product name must be at least 2 characters long');\n        }\n        sanitizedData.name = sanitizedName;\n    }\n    // Validate description (optional)\n    if (data.description !== undefined && data.description !== null) {\n        if (typeof data.description !== 'string') {\n            errors.push('Product description must be a string');\n        } else {\n            sanitizedData.description = sanitizeString(data.description, 500);\n        }\n    }\n    // Validate download_link\n    if (!data.download_link) {\n        errors.push('Download link is required');\n    } else if (typeof data.download_link !== 'string') {\n        errors.push('Download link must be a string');\n    } else {\n        const urlPattern = /^https?:\\/\\/.+/;\n        if (!urlPattern.test(data.download_link)) {\n            errors.push('Download link must be a valid HTTP/HTTPS URL');\n        }\n        if (data.download_link.length > 500) {\n            errors.push('Download link must be less than 500 characters');\n        }\n        sanitizedData.download_link = data.download_link.trim();\n    }\n    // Validate image_url (optional)\n    if (data.image_url !== undefined && data.image_url !== null && data.image_url !== '') {\n        if (typeof data.image_url !== 'string') {\n            errors.push('Image URL must be a string');\n        } else {\n            const urlPattern = /^https?:\\/\\/.+/;\n            if (!urlPattern.test(data.image_url)) {\n                errors.push('Image URL must be a valid HTTP/HTTPS URL');\n            }\n            if (data.image_url.length > 500) {\n                errors.push('Image URL must be less than 500 characters');\n            }\n            sanitizedData.image_url = data.image_url.trim();\n        }\n    }\n    return {\n        isValid: errors.length === 0,\n        errors,\n        sanitizedData\n    };\n}\n/**\n * Validate order creation data\n */ function validateOrderData(data) {\n    const errors = [];\n    let sanitizedData = {};\n    // Validate order_id\n    const orderIdValidation = validateOrderId(data.order_id);\n    if (!orderIdValidation.isValid) {\n        errors.push(...orderIdValidation.errors);\n    } else {\n        sanitizedData.order_id = orderIdValidation.sanitizedData;\n    }\n    // Validate product_ids\n    if (!data.product_ids) {\n        errors.push('Product IDs are required');\n    } else if (!Array.isArray(data.product_ids)) {\n        errors.push('Product IDs must be an array');\n    } else if (data.product_ids.length === 0) {\n        errors.push('At least one product ID is required');\n    } else {\n        const validProductIds = [];\n        data.product_ids.forEach((id, index)=>{\n            if (typeof id !== 'number' || !Number.isInteger(id) || id <= 0) {\n                errors.push(`Product ID at index ${index} must be a positive integer`);\n            } else {\n                validProductIds.push(id);\n            }\n        });\n        sanitizedData.product_ids = validProductIds;\n    }\n    // Validate expiration_days\n    if (data.expiration_days !== undefined) {\n        if (typeof data.expiration_days !== 'number' || !Number.isInteger(data.expiration_days)) {\n            errors.push('Expiration days must be an integer');\n        } else if (data.expiration_days < 1 || data.expiration_days > 365) {\n            errors.push('Expiration days must be between 1 and 365');\n        } else {\n            sanitizedData.expiration_days = data.expiration_days;\n        }\n    }\n    // Validate one_time_use\n    if (data.one_time_use !== undefined) {\n        if (typeof data.one_time_use !== 'boolean') {\n            errors.push('One-time use must be a boolean');\n        } else {\n            sanitizedData.one_time_use = data.one_time_use;\n        }\n    }\n    // Validate created_by (optional)\n    if (data.created_by !== undefined && data.created_by !== null) {\n        if (typeof data.created_by !== 'string') {\n            errors.push('Created by must be a string');\n        } else {\n            sanitizedData.created_by = sanitizeString(data.created_by, 50);\n        }\n    }\n    return {\n        isValid: errors.length === 0,\n        errors,\n        sanitizedData\n    };\n}\n/**\n * Validate settings data\n */ function validateSettingsData(data) {\n    const errors = [];\n    let sanitizedData = {};\n    if (!data || typeof data !== 'object') {\n        errors.push('Settings data must be an object');\n        return {\n            isValid: false,\n            errors\n        };\n    }\n    // Validate each setting\n    Object.keys(data).forEach((key)=>{\n        const sanitizedKey = sanitizeString(key, 50);\n        const value = data[key];\n        if (!/^[a-zA-Z0-9_]+$/.test(sanitizedKey)) {\n            errors.push(`Setting key \"${key}\" can only contain letters, numbers, and underscores`);\n            return;\n        }\n        if (typeof value !== 'string' && typeof value !== 'number' && typeof value !== 'boolean') {\n            errors.push(`Setting value for \"${key}\" must be a string, number, or boolean`);\n            return;\n        }\n        if (typeof value === 'string') {\n            sanitizedData[sanitizedKey] = sanitizeString(value, 100);\n        } else {\n            sanitizedData[sanitizedKey] = value;\n        }\n    });\n    return {\n        isValid: errors.length === 0,\n        errors,\n        sanitizedData\n    };\n}\n/**\n * Middleware function to validate request body\n */ function validateRequest(validationFn) {\n    return (data)=>{\n        const result = validationFn(data);\n        if (!result.isValid) {\n            throw new ValidationError(result.errors);\n        }\n        return result.sanitizedData;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/validation.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Forders%2Froute&page=%2Fapi%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Forders%2Froute&page=%2Fapi%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_Imang_Documents_GitHub_self_claim_link_app_api_orders_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/orders/route.ts */ \"(rsc)/./app/api/orders/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([C_Users_Imang_Documents_GitHub_self_claim_link_app_api_orders_route_ts__WEBPACK_IMPORTED_MODULE_16__]);\nC_Users_Imang_Documents_GitHub_self_claim_link_app_api_orders_route_ts__WEBPACK_IMPORTED_MODULE_16__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/orders/route\",\n        pathname: \"/api/orders\",\n        filename: \"route\",\n        bundlePath: \"app/api/orders/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\Imang\\\\Documents\\\\GitHub\\\\self-claim-link\\\\app\\\\api\\\\orders\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Imang_Documents_GitHub_self_claim_link_app_api_orders_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/orders/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Forders%2Froute&page=%2Fapi%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = import("pg");;

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/winston","vendor-chunks/winston-transport","vendor-chunks/bcryptjs","vendor-chunks/colorspace","vendor-chunks/async","vendor-chunks/logform","vendor-chunks/safe-stable-stringify","vendor-chunks/@colors","vendor-chunks/fecha","vendor-chunks/string_decoder","vendor-chunks/@dabh","vendor-chunks/color-string","vendor-chunks/color-name","vendor-chunks/stack-trace","vendor-chunks/triple-beam","vendor-chunks/ms","vendor-chunks/kuler","vendor-chunks/one-time","vendor-chunks/inherits","vendor-chunks/fn.name","vendor-chunks/enabled","vendor-chunks/is-stream","vendor-chunks/simple-swizzle","vendor-chunks/text-hex","vendor-chunks/is-arrayish","vendor-chunks/util-deprecate","vendor-chunks/date-fns","vendor-chunks/@babel"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Forders%2Froute&page=%2Fapi%2Forders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Forders%2Froute.ts&appDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CImang%5CDocuments%5CGitHub%5Cself-claim-link&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();